{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\hp\\\\OneDrive\\\\Desktop\\\\SE PROJECT\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\hp\\\\OneDrive\\\\Desktop\\\\SE PROJECT\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport { LOGIN_REQUEST, LOGIN_FAIL, LOGIN_SUCCESS, REGISTER_USER_REQUEST, REGISTER_USER_SUCCESS, REGISTER_USER_FAIL, LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOAD_USER_FAIL, LOGOUT_SUCCESS, LOGOUT_FAIL, UPDATE_PROFILE_REQUEST, UPDATE_PROFILE_SUCCESS, UPDATE_PROFILE_FAIL, UPDATE_PASSWORD_REQUEST, UPDATE_PASSWORD_SUCCESS, UPDATE_PASSWORD_FAIL, FORGOT_PASSWORD_REQUEST, FORGOT_PASSWORD_SUCCESS, FORGOT_PASSWORD_FAIL, RESET_PASSWORD_REQUEST, RESET_PASSWORD_SUCCESS, RESET_PASSWORD_FAIL, ALL_USERS_REQUEST, ALL_USERS_SUCCESS, ALL_USERS_FAIL, DELETE_USER_REQUEST, DELETE_USER_SUCCESS, DELETE_USER_FAIL, UPDATE_USER_REQUEST, UPDATE_USER_SUCCESS, UPDATE_USER_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL, CLEAR_ERRORS } from \"../constants/userConstants\";\nimport axios from \"axios\"; // Login\n\nexport var login = function login(email, password) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var config, _yield$axios$post, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              dispatch({\n                type: LOGIN_REQUEST\n              });\n              config = {\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                }\n              };\n              _context.next = 5;\n              return axios.post(\"/api/v1/login\", {\n                email: email,\n                password: password\n              }, config);\n\n            case 5:\n              _yield$axios$post = _context.sent;\n              data = _yield$axios$post.data;\n              dispatch({\n                type: LOGIN_SUCCESS,\n                payload: data.user\n              });\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](0);\n              dispatch({\n                type: LOGIN_FAIL,\n                payload: _context.t0.response.data.message\n              });\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 10]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n}; // Register\n\nexport var register = function register(userData) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var config, _yield$axios$post2, data;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              dispatch({\n                type: REGISTER_USER_REQUEST\n              });\n              config = {\n                headers: {\n                  \"Content-Type\": \"multipart/form-data\"\n                }\n              };\n              _context2.next = 5;\n              return axios.post(\"/api/v1/register\", userData, config);\n\n            case 5:\n              _yield$axios$post2 = _context2.sent;\n              data = _yield$axios$post2.data;\n              dispatch({\n                type: REGISTER_USER_SUCCESS,\n                payload: data.user\n              });\n              _context2.next = 13;\n              break;\n\n            case 10:\n              _context2.prev = 10;\n              _context2.t0 = _context2[\"catch\"](0);\n              dispatch({\n                type: REGISTER_USER_FAIL,\n                payload: _context2.t0.response.data.message\n              });\n\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 10]]);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n}; // Load User\n\nexport var loadUser = function loadUser() {\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch) {\n      var _yield$axios$get, data;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              dispatch({\n                type: LOAD_USER_REQUEST\n              });\n              _context3.next = 4;\n              return axios.get(\"/api/v1/me\");\n\n            case 4:\n              _yield$axios$get = _context3.sent;\n              data = _yield$axios$get.data;\n              dispatch({\n                type: LOAD_USER_SUCCESS,\n                payload: data.user\n              });\n              _context3.next = 12;\n              break;\n\n            case 9:\n              _context3.prev = 9;\n              _context3.t0 = _context3[\"catch\"](0);\n              dispatch({\n                type: LOAD_USER_FAIL,\n                payload: _context3.t0.response.data.message\n              });\n\n            case 12:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 9]]);\n    }));\n\n    return function (_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n}; // Logout User\n\nexport var logout = function logout() {\n  return /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return axios.get(\"/api/v1/logout\");\n\n            case 3:\n              dispatch({\n                type: LOGOUT_SUCCESS\n              });\n              _context4.next = 9;\n              break;\n\n            case 6:\n              _context4.prev = 6;\n              _context4.t0 = _context4[\"catch\"](0);\n              dispatch({\n                type: LOGOUT_FAIL,\n                payload: _context4.t0.response.data.message\n              });\n\n            case 9:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 6]]);\n    }));\n\n    return function (_x4) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n}; // Update Profile\n\nexport var updateProfile = function updateProfile(userData) {\n  return /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(dispatch) {\n      var config, _yield$axios$put, data;\n\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              dispatch({\n                type: UPDATE_PROFILE_REQUEST\n              });\n              config = {\n                headers: {\n                  \"Content-Type\": \"multipart/form-data\"\n                }\n              };\n              _context5.next = 5;\n              return axios.put(\"/api/v1/me/update\", userData, config);\n\n            case 5:\n              _yield$axios$put = _context5.sent;\n              data = _yield$axios$put.data;\n              dispatch({\n                type: UPDATE_PROFILE_SUCCESS,\n                payload: data.success\n              });\n              _context5.next = 13;\n              break;\n\n            case 10:\n              _context5.prev = 10;\n              _context5.t0 = _context5[\"catch\"](0);\n              dispatch({\n                type: UPDATE_PROFILE_FAIL,\n                payload: _context5.t0.response.data.message\n              });\n\n            case 13:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[0, 10]]);\n    }));\n\n    return function (_x5) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n}; // Update Password\n\nexport var updatePassword = function updatePassword(passwords) {\n  return /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(dispatch) {\n      var config, _yield$axios$put2, data;\n\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              dispatch({\n                type: UPDATE_PASSWORD_REQUEST\n              });\n              config = {\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                }\n              };\n              _context6.next = 5;\n              return axios.put(\"/api/v1/password/update\", passwords, config);\n\n            case 5:\n              _yield$axios$put2 = _context6.sent;\n              data = _yield$axios$put2.data;\n              dispatch({\n                type: UPDATE_PASSWORD_SUCCESS,\n                payload: data.success\n              });\n              _context6.next = 13;\n              break;\n\n            case 10:\n              _context6.prev = 10;\n              _context6.t0 = _context6[\"catch\"](0);\n              dispatch({\n                type: UPDATE_PASSWORD_FAIL,\n                payload: _context6.t0.response.data.message\n              });\n\n            case 13:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[0, 10]]);\n    }));\n\n    return function (_x6) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n}; // Forgot Password\n\nexport var forgotPassword = function forgotPassword(email) {\n  return /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(dispatch) {\n      var config, _yield$axios$post3, data;\n\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.prev = 0;\n              dispatch({\n                type: FORGOT_PASSWORD_REQUEST\n              });\n              config = {\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                }\n              };\n              _context7.next = 5;\n              return axios.post(\"/api/v1/password/forgot\", email, config);\n\n            case 5:\n              _yield$axios$post3 = _context7.sent;\n              data = _yield$axios$post3.data;\n              dispatch({\n                type: FORGOT_PASSWORD_SUCCESS,\n                payload: data.message\n              });\n              _context7.next = 13;\n              break;\n\n            case 10:\n              _context7.prev = 10;\n              _context7.t0 = _context7[\"catch\"](0);\n              dispatch({\n                type: FORGOT_PASSWORD_FAIL,\n                payload: _context7.t0.response.data.message\n              });\n\n            case 13:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7, null, [[0, 10]]);\n    }));\n\n    return function (_x7) {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n}; // Reset Password\n\nexport var resetPassword = function resetPassword(token, passwords) {\n  return /*#__PURE__*/function () {\n    var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(dispatch) {\n      var config, _yield$axios$put3, data;\n\n      return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.prev = 0;\n              dispatch({\n                type: RESET_PASSWORD_REQUEST\n              });\n              config = {\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                }\n              };\n              _context8.next = 5;\n              return axios.put(\"/api/v1/password/reset/\".concat(token), passwords, config);\n\n            case 5:\n              _yield$axios$put3 = _context8.sent;\n              data = _yield$axios$put3.data;\n              dispatch({\n                type: RESET_PASSWORD_SUCCESS,\n                payload: data.success\n              });\n              _context8.next = 13;\n              break;\n\n            case 10:\n              _context8.prev = 10;\n              _context8.t0 = _context8[\"catch\"](0);\n              dispatch({\n                type: RESET_PASSWORD_FAIL,\n                payload: _context8.t0.response.data.message\n              });\n\n            case 13:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8, null, [[0, 10]]);\n    }));\n\n    return function (_x8) {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n}; // get All Users\n\nexport var getAllUsers = function getAllUsers() {\n  return /*#__PURE__*/function () {\n    var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(dispatch) {\n      var _yield$axios$get2, data;\n\n      return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              _context9.prev = 0;\n              dispatch({\n                type: ALL_USERS_REQUEST\n              });\n              _context9.next = 4;\n              return axios.get(\"/api/v1/admin/users\");\n\n            case 4:\n              _yield$axios$get2 = _context9.sent;\n              data = _yield$axios$get2.data;\n              dispatch({\n                type: ALL_USERS_SUCCESS,\n                payload: data.users\n              });\n              _context9.next = 12;\n              break;\n\n            case 9:\n              _context9.prev = 9;\n              _context9.t0 = _context9[\"catch\"](0);\n              dispatch({\n                type: ALL_USERS_FAIL,\n                payload: _context9.t0.response.data.message\n              });\n\n            case 12:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9, null, [[0, 9]]);\n    }));\n\n    return function (_x9) {\n      return _ref9.apply(this, arguments);\n    };\n  }();\n}; // get  User Details\n\nexport var getUserDetails = function getUserDetails(id) {\n  return /*#__PURE__*/function () {\n    var _ref10 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(dispatch) {\n      var _yield$axios$get3, data;\n\n      return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              _context10.prev = 0;\n              dispatch({\n                type: USER_DETAILS_REQUEST\n              });\n              _context10.next = 4;\n              return axios.get(\"/api/v1/admin/user/\".concat(id));\n\n            case 4:\n              _yield$axios$get3 = _context10.sent;\n              data = _yield$axios$get3.data;\n              dispatch({\n                type: USER_DETAILS_SUCCESS,\n                payload: data.user\n              });\n              _context10.next = 12;\n              break;\n\n            case 9:\n              _context10.prev = 9;\n              _context10.t0 = _context10[\"catch\"](0);\n              dispatch({\n                type: USER_DETAILS_FAIL,\n                payload: _context10.t0.response.data.message\n              });\n\n            case 12:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10, null, [[0, 9]]);\n    }));\n\n    return function (_x10) {\n      return _ref10.apply(this, arguments);\n    };\n  }();\n}; // Update User\n\nexport var updateUser = function updateUser(id, userData) {\n  return /*#__PURE__*/function () {\n    var _ref11 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11(dispatch) {\n      var config, _yield$axios$put4, data;\n\n      return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              _context11.prev = 0;\n              dispatch({\n                type: UPDATE_USER_REQUEST\n              });\n              config = {\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                }\n              };\n              _context11.next = 5;\n              return axios.put(\"/api/v1/admin/user/\".concat(id), userData, config);\n\n            case 5:\n              _yield$axios$put4 = _context11.sent;\n              data = _yield$axios$put4.data;\n              dispatch({\n                type: UPDATE_USER_SUCCESS,\n                payload: data.success\n              });\n              _context11.next = 13;\n              break;\n\n            case 10:\n              _context11.prev = 10;\n              _context11.t0 = _context11[\"catch\"](0);\n              dispatch({\n                type: UPDATE_USER_FAIL,\n                payload: _context11.t0.response.data.message\n              });\n\n            case 13:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, _callee11, null, [[0, 10]]);\n    }));\n\n    return function (_x11) {\n      return _ref11.apply(this, arguments);\n    };\n  }();\n}; // Delete User\n\nexport var deleteUser = function deleteUser(id) {\n  return /*#__PURE__*/function () {\n    var _ref12 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12(dispatch) {\n      var _yield$axios$delete, data;\n\n      return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              _context12.prev = 0;\n              dispatch({\n                type: DELETE_USER_REQUEST\n              });\n              _context12.next = 4;\n              return axios.delete(\"/api/v1/admin/user/\".concat(id));\n\n            case 4:\n              _yield$axios$delete = _context12.sent;\n              data = _yield$axios$delete.data;\n              dispatch({\n                type: DELETE_USER_SUCCESS,\n                payload: data\n              });\n              _context12.next = 12;\n              break;\n\n            case 9:\n              _context12.prev = 9;\n              _context12.t0 = _context12[\"catch\"](0);\n              dispatch({\n                type: DELETE_USER_FAIL,\n                payload: _context12.t0.response.data.message\n              });\n\n            case 12:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, _callee12, null, [[0, 9]]);\n    }));\n\n    return function (_x12) {\n      return _ref12.apply(this, arguments);\n    };\n  }();\n}; // Clearing Errors\n\nexport var clearErrors = function clearErrors() {\n  return /*#__PURE__*/function () {\n    var _ref13 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee13(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n        while (1) {\n          switch (_context13.prev = _context13.next) {\n            case 0:\n              dispatch({\n                type: CLEAR_ERRORS\n              });\n\n            case 1:\n            case \"end\":\n              return _context13.stop();\n          }\n        }\n      }, _callee13);\n    }));\n\n    return function (_x13) {\n      return _ref13.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["C:/Users/hp/OneDrive/Desktop/SE PROJECT/frontend/src/actions/userAction.js"],"names":["LOGIN_REQUEST","LOGIN_FAIL","LOGIN_SUCCESS","REGISTER_USER_REQUEST","REGISTER_USER_SUCCESS","REGISTER_USER_FAIL","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAIL","LOGOUT_SUCCESS","LOGOUT_FAIL","UPDATE_PROFILE_REQUEST","UPDATE_PROFILE_SUCCESS","UPDATE_PROFILE_FAIL","UPDATE_PASSWORD_REQUEST","UPDATE_PASSWORD_SUCCESS","UPDATE_PASSWORD_FAIL","FORGOT_PASSWORD_REQUEST","FORGOT_PASSWORD_SUCCESS","FORGOT_PASSWORD_FAIL","RESET_PASSWORD_REQUEST","RESET_PASSWORD_SUCCESS","RESET_PASSWORD_FAIL","ALL_USERS_REQUEST","ALL_USERS_SUCCESS","ALL_USERS_FAIL","DELETE_USER_REQUEST","DELETE_USER_SUCCESS","DELETE_USER_FAIL","UPDATE_USER_REQUEST","UPDATE_USER_SUCCESS","UPDATE_USER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","CLEAR_ERRORS","axios","login","email","password","dispatch","type","config","headers","post","data","payload","user","response","message","register","userData","loadUser","get","logout","updateProfile","put","success","updatePassword","passwords","forgotPassword","resetPassword","token","getAllUsers","users","getUserDetails","id","updateUser","deleteUser","delete","clearErrors"],"mappings":"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","sourcesContent":["import {\n  LOGIN_REQUEST,\n  LOGIN_FAIL,\n  LOGIN_SUCCESS,\n  REGISTER_USER_REQUEST,\n  REGISTER_USER_SUCCESS,\n  REGISTER_USER_FAIL,\n  LOAD_USER_REQUEST,\n  LOAD_USER_SUCCESS,\n  LOAD_USER_FAIL,\n  LOGOUT_SUCCESS,\n  LOGOUT_FAIL,\n  UPDATE_PROFILE_REQUEST,\n  UPDATE_PROFILE_SUCCESS,\n  UPDATE_PROFILE_FAIL,\n  UPDATE_PASSWORD_REQUEST,\n  UPDATE_PASSWORD_SUCCESS,\n  UPDATE_PASSWORD_FAIL,\n  FORGOT_PASSWORD_REQUEST,\n  FORGOT_PASSWORD_SUCCESS,\n  FORGOT_PASSWORD_FAIL,\n  RESET_PASSWORD_REQUEST,\n  RESET_PASSWORD_SUCCESS,\n  RESET_PASSWORD_FAIL,\n  ALL_USERS_REQUEST,\n  ALL_USERS_SUCCESS,\n  ALL_USERS_FAIL,\n  DELETE_USER_REQUEST,\n  DELETE_USER_SUCCESS,\n  DELETE_USER_FAIL,\n  UPDATE_USER_REQUEST,\n  UPDATE_USER_SUCCESS,\n  UPDATE_USER_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_DETAILS_FAIL,\n  CLEAR_ERRORS,\n} from \"../constants/userConstants\";\nimport axios from \"axios\";\n\n// Login\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({ type: LOGIN_REQUEST });\n\n    const config = { headers: { \"Content-Type\": \"application/json\" } };\n\n    const { data } = await axios.post(\n      `/api/v1/login`,\n      { email, password },\n      config\n    );\n\n    dispatch({ type: LOGIN_SUCCESS, payload: data.user });\n  } catch (error) {\n    dispatch({ type: LOGIN_FAIL, payload: error.response.data.message });\n  }\n};\n\n// Register\nexport const register = (userData) => async (dispatch) => {\n  try {\n    dispatch({ type: REGISTER_USER_REQUEST });\n\n    const config = { headers: { \"Content-Type\": \"multipart/form-data\" } };\n\n    const { data } = await axios.post(`/api/v1/register`, userData, config);\n\n    dispatch({ type: REGISTER_USER_SUCCESS, payload: data.user });\n  } catch (error) {\n    dispatch({\n      type: REGISTER_USER_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// Load User\nexport const loadUser = () => async (dispatch) => {\n  try {\n    dispatch({ type: LOAD_USER_REQUEST });\n\n    const { data } = await axios.get(`/api/v1/me`);\n\n    dispatch({ type: LOAD_USER_SUCCESS, payload: data.user });\n  } catch (error) {\n    dispatch({ type: LOAD_USER_FAIL, payload: error.response.data.message });\n  }\n};\n\n// Logout User\nexport const logout = () => async (dispatch) => {\n  try {\n    await axios.get(`/api/v1/logout`);\n\n    dispatch({ type: LOGOUT_SUCCESS });\n  } catch (error) {\n    dispatch({ type: LOGOUT_FAIL, payload: error.response.data.message });\n  }\n};\n\n// Update Profile\nexport const updateProfile = (userData) => async (dispatch) => {\n  try {\n    dispatch({ type: UPDATE_PROFILE_REQUEST });\n\n    const config = { headers: { \"Content-Type\": \"multipart/form-data\" } };\n\n    const { data } = await axios.put(`/api/v1/me/update`, userData, config);\n\n    dispatch({ type: UPDATE_PROFILE_SUCCESS, payload: data.success });\n  } catch (error) {\n    dispatch({\n      type: UPDATE_PROFILE_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// Update Password\nexport const updatePassword = (passwords) => async (dispatch) => {\n  try {\n    dispatch({ type: UPDATE_PASSWORD_REQUEST });\n\n    const config = { headers: { \"Content-Type\": \"application/json\" } };\n\n    const { data } = await axios.put(\n      `/api/v1/password/update`,\n      passwords,\n      config\n    );\n\n    dispatch({ type: UPDATE_PASSWORD_SUCCESS, payload: data.success });\n  } catch (error) {\n    dispatch({\n      type: UPDATE_PASSWORD_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// Forgot Password\nexport const forgotPassword = (email) => async (dispatch) => {\n  try {\n    dispatch({ type: FORGOT_PASSWORD_REQUEST });\n\n    const config = { headers: { \"Content-Type\": \"application/json\" } };\n\n    const { data } = await axios.post(`/api/v1/password/forgot`, email, config);\n\n    dispatch({ type: FORGOT_PASSWORD_SUCCESS, payload: data.message });\n  } catch (error) {\n    dispatch({\n      type: FORGOT_PASSWORD_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// Reset Password\nexport const resetPassword = (token, passwords) => async (dispatch) => {\n  try {\n    dispatch({ type: RESET_PASSWORD_REQUEST });\n\n    const config = { headers: { \"Content-Type\": \"application/json\" } };\n\n    const { data } = await axios.put(\n      `/api/v1/password/reset/${token}`,\n      passwords,\n      config\n    );\n\n    dispatch({ type: RESET_PASSWORD_SUCCESS, payload: data.success });\n  } catch (error) {\n    dispatch({\n      type: RESET_PASSWORD_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// get All Users\nexport const getAllUsers = () => async (dispatch) => {\n  try {\n    dispatch({ type: ALL_USERS_REQUEST });\n    const { data } = await axios.get(`/api/v1/admin/users`);\n\n    dispatch({ type: ALL_USERS_SUCCESS, payload: data.users });\n  } catch (error) {\n    dispatch({ type: ALL_USERS_FAIL, payload: error.response.data.message });\n  }\n};\n\n// get  User Details\nexport const getUserDetails = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: USER_DETAILS_REQUEST });\n    const { data } = await axios.get(`/api/v1/admin/user/${id}`);\n\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data.user });\n  } catch (error) {\n    dispatch({ type: USER_DETAILS_FAIL, payload: error.response.data.message });\n  }\n};\n\n// Update User\nexport const updateUser = (id, userData) => async (dispatch) => {\n  try {\n    dispatch({ type: UPDATE_USER_REQUEST });\n\n    const config = { headers: { \"Content-Type\": \"application/json\" } };\n\n    const { data } = await axios.put(\n      `/api/v1/admin/user/${id}`,\n      userData,\n      config\n    );\n\n    dispatch({ type: UPDATE_USER_SUCCESS, payload: data.success });\n  } catch (error) {\n    dispatch({\n      type: UPDATE_USER_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// Delete User\nexport const deleteUser = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: DELETE_USER_REQUEST });\n\n    const { data } = await axios.delete(`/api/v1/admin/user/${id}`);\n\n    dispatch({ type: DELETE_USER_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: DELETE_USER_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// Clearing Errors\nexport const clearErrors = () => async (dispatch) => {\n  dispatch({ type: CLEAR_ERRORS });\n};\n"]},"metadata":{},"sourceType":"module"}