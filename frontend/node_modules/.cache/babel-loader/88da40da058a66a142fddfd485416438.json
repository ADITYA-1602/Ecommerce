{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\hp\\\\OneDrive\\\\Desktop\\\\SE PROJECT\\\\frontend\\\\src\\\\component\\\\Order\\\\MyOrders.js\";\n\nimport React, { Fragment, useEffect } from \"react\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport \"./myOrders.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { clearErrors, myOrders } from \"../../actions/orderAction\";\nimport Loader from \"../layout/Loader/Loader\";\nimport { Link } from \"react-router-dom\";\nimport { useAlert } from \"react-alert\";\nimport Typography from \"@material-ui/core/Typography\";\nimport MetaData from \"../layout/MetaData\";\nimport LaunchIcon from \"@material-ui/icons/Launch\";\n\nvar MyOrders = function MyOrders() {\n  var dispatch = useDispatch();\n  var alert = useAlert();\n\n  var _useSelector = useSelector(function (state) {\n    return state.myOrders;\n  }),\n      loading = _useSelector.loading,\n      error = _useSelector.error,\n      orders = _useSelector.orders;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.user;\n  }),\n      user = _useSelector2.user;\n\n  var columns = [{\n    field: \"id\",\n    headerName: \"Order ID\",\n    minWidth: 300,\n    flex: 1\n  }, {\n    field: \"status\",\n    headerName: \"Status\",\n    minWidth: 150,\n    flex: 0.5,\n    cellClassName: function cellClassName(params) {\n      return params.getValue(params.id, \"status\") === \"Delivered\" ? \"greenColor\" : \"redColor\";\n    }\n  }, {\n    field: \"itemsQty\",\n    headerName: \"Items Qty\",\n    type: \"number\",\n    minWidth: 150,\n    flex: 0.3\n  }, {\n    field: \"amount\",\n    headerName: \"Amount\",\n    type: \"number\",\n    minWidth: 270,\n    flex: 0.5\n  }, {\n    field: \"actions\",\n    flex: 0.3,\n    headerName: \"Actions\",\n    minWidth: 150,\n    type: \"number\",\n    sortable: false,\n    renderCell: function renderCell(params) {\n      return /*#__PURE__*/React.createElement(Link, {\n        to: \"/order/\".concat(params.getValue(params.id, \"id\")),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(LaunchIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }\n      }));\n    }\n  }];\n  var rows = [];\n  orders && orders.forEach(function (item, index) {\n    rows.push({\n      itemsQty: item.orderItems.length,\n      id: item._id,\n      status: item.orderStatus,\n      amount: item.totalPrice\n    });\n  });\n  useEffect(function () {\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    dispatch(myOrders());\n  }, [dispatch, alert, error]);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MetaData, {\n    title: \"\".concat(user.name, \" - Orders\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }), loading ? /*#__PURE__*/React.createElement(Loader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"myOrdersPage\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DataGrid, {\n    rows: rows,\n    columns: columns,\n    pageSize: 10,\n    disableSelectionOnClick: true,\n    className: \"myOrdersTable\",\n    autoHeight: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    id: \"myOrdersHeading\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, user.name, \"'s Orders\")));\n};\n\nexport default MyOrders;","map":{"version":3,"sources":["C:/Users/hp/OneDrive/Desktop/SE PROJECT/frontend/src/component/Order/MyOrders.js"],"names":["React","Fragment","useEffect","DataGrid","useSelector","useDispatch","clearErrors","myOrders","Loader","Link","useAlert","Typography","MetaData","LaunchIcon","MyOrders","dispatch","alert","state","loading","error","orders","user","columns","field","headerName","minWidth","flex","cellClassName","params","getValue","id","type","sortable","renderCell","rows","forEach","item","index","push","itemsQty","orderItems","length","_id","status","orderStatus","amount","totalPrice","name"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport \"./myOrders.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { clearErrors, myOrders } from \"../../actions/orderAction\";\nimport Loader from \"../layout/Loader/Loader\";\nimport { Link } from \"react-router-dom\";\nimport { useAlert } from \"react-alert\";\nimport Typography from \"@material-ui/core/Typography\";\nimport MetaData from \"../layout/MetaData\";\nimport LaunchIcon from \"@material-ui/icons/Launch\";\n\nconst MyOrders = () => {\n  const dispatch = useDispatch();\n\n  const alert = useAlert();\n\n  const { loading, error, orders } = useSelector((state) => state.myOrders);\n  const { user } = useSelector((state) => state.user);\n\n  const columns = [\n    { field: \"id\", headerName: \"Order ID\", minWidth: 300, flex: 1 },\n\n    {\n      field: \"status\",\n      headerName: \"Status\",\n      minWidth: 150,\n      flex: 0.5,\n      cellClassName: (params) => {\n        return params.getValue(params.id, \"status\") === \"Delivered\"\n          ? \"greenColor\"\n          : \"redColor\";\n      },\n    },\n    {\n      field: \"itemsQty\",\n      headerName: \"Items Qty\",\n      type: \"number\",\n      minWidth: 150,\n      flex: 0.3,\n    },\n\n    {\n      field: \"amount\",\n      headerName: \"Amount\",\n      type: \"number\",\n      minWidth: 270,\n      flex: 0.5,\n    },\n\n    {\n      field: \"actions\",\n      flex: 0.3,\n      headerName: \"Actions\",\n      minWidth: 150,\n      type: \"number\",\n      sortable: false,\n      renderCell: (params) => {\n        return (\n          <Link to={`/order/${params.getValue(params.id, \"id\")}`}>\n            <LaunchIcon />\n          </Link>\n        );\n      },\n    },\n  ];\n  const rows = [];\n\n  orders &&\n    orders.forEach((item, index) => {\n      rows.push({\n        itemsQty: item.orderItems.length,\n        id: item._id,\n        status: item.orderStatus,\n        amount: item.totalPrice,\n      });\n    });\n\n  useEffect(() => {\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    dispatch(myOrders());\n  }, [dispatch, alert, error]);\n\n  return (\n    <Fragment>\n      <MetaData title={`${user.name} - Orders`} />\n\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className=\"myOrdersPage\">\n          <DataGrid\n            rows={rows}\n            columns={columns}\n            pageSize={10}\n            disableSelectionOnClick\n            className=\"myOrdersTable\"\n            autoHeight\n          />\n\n          <Typography id=\"myOrdersHeading\">{user.name}'s Orders</Typography>\n        </div>\n      )}\n    </Fragment>\n  );\n};\n\nexport default MyOrders;\n"]},"metadata":{},"sourceType":"module"}