{"ast":null,"code":"// import React, { Fragment } from \"react\";\n// import { useSelector } from \"react-redux\";\n// import { Navigate, Route,Routes } from \"react-router-dom\";\n// const ProtectedRoute = ({ isAdmin, component: Component, ...rest }) => {\n//   const { loading, isAuthenticated, user } = useSelector((state) => state.user);\n//   return (\n//     <Fragment>\n//       {loading === false && (\n//         <Routes>\n//           <Route\n//             {...rest}\n//             render={(props) => {\n//               if (isAuthenticated === false) {\n//                 return <Navigate to=\"/login\" />;\n//               }\n//               if (isAdmin === true && user.role !== \"admin\") {\n//                 return <Navigate to=\"/login\" />;\n//               }\n//               return <Component {...props} />;\n//             }}\n//           />\n//         </Routes>\n//       )}\n//     </Fragment>\n//   );\n// };\n// export default ProtectedRoute;","map":{"version":3,"sources":["C:/Users/hp/OneDrive/Desktop/SE PROJECT/frontend/src/component/Route/ProtectedRoute.js"],"names":[],"mappings":"AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import React, { Fragment } from \"react\";\n// import { useSelector } from \"react-redux\";\n// import { Navigate, Route,Routes } from \"react-router-dom\";\n\n// const ProtectedRoute = ({ isAdmin, component: Component, ...rest }) => {\n//   const { loading, isAuthenticated, user } = useSelector((state) => state.user);\n\n//   return (\n//     <Fragment>\n//       {loading === false && (\n//         <Routes>\n//           <Route\n//             {...rest}\n//             render={(props) => {\n//               if (isAuthenticated === false) {\n//                 return <Navigate to=\"/login\" />;\n//               }\n\n//               if (isAdmin === true && user.role !== \"admin\") {\n//                 return <Navigate to=\"/login\" />;\n//               }\n\n//               return <Component {...props} />;\n//             }}\n//           />\n//         </Routes>\n//       )}\n//     </Fragment>\n//   );\n// };\n\n// export default ProtectedRoute;\n"]},"metadata":{},"sourceType":"module"}