{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\hp\\\\OneDrive\\\\Desktop\\\\SE PROJECT\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\hp\\\\OneDrive\\\\Desktop\\\\SE PROJECT\\\\frontend\\\\src\\\\component\\\\Admin\\\\ProcessOrder.js\";\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport MetaData from \"../layout/MetaData\";\nimport { Link } from \"react-router-dom\";\nimport { Typography } from \"@material-ui/core\";\nimport SideBar from \"./Sidebar\";\nimport { getOrderDetails, clearErrors, updateOrder } from \"../../actions/orderAction\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Loader from \"../layout/Loader/Loader\";\nimport { useAlert } from \"react-alert\";\nimport AccountTreeIcon from \"@material-ui/icons/AccountTree\";\nimport { Button } from \"@material-ui/core\";\nimport { UPDATE_ORDER_RESET } from \"../../constants/orderConstants\";\nimport \"./processOrder.css\";\n\nvar ProcessOrder = function ProcessOrder(_ref) {\n  var history = _ref.history,\n      match = _ref.match;\n\n  var _useSelector = useSelector(function (state) {\n    return state.orderDetails;\n  }),\n      order = _useSelector.order,\n      error = _useSelector.error,\n      loading = _useSelector.loading;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.order;\n  }),\n      updateError = _useSelector2.error,\n      isUpdated = _useSelector2.isUpdated;\n\n  var updateOrderSubmitHandler = function updateOrderSubmitHandler(e) {\n    e.preventDefault();\n    var myForm = new FormData();\n    myForm.set(\"status\", status);\n    dispatch(updateOrder(match.params.id, myForm));\n  };\n\n  var dispatch = useDispatch();\n  var alert = useAlert();\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      status = _useState2[0],\n      setStatus = _useState2[1];\n\n  useEffect(function () {\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (updateError) {\n      alert.error(updateError);\n      dispatch(clearErrors());\n    }\n\n    if (isUpdated) {\n      alert.success(\"Order Updated Successfully\");\n      dispatch({\n        type: UPDATE_ORDER_RESET\n      });\n    }\n\n    dispatch(getOrderDetails(match.params.id));\n  }, [dispatch, alert, error, match.params.id, isUpdated, updateError]);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MetaData, {\n    title: \"Process Order\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SideBar, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newProductContainer\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, loading ? /*#__PURE__*/React.createElement(Loader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"confirmOrderPage\",\n    style: {\n      display: order.orderStatus === \"Delivered\" ? \"block\" : \"grid\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"confirmshippingArea\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 19\n    }\n  }, \"Shipping Info\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"orderDetailsContainerBox\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 23\n    }\n  }, \"Name:\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 23\n    }\n  }, order.user && order.user.name)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 23\n    }\n  }, \"Phone:\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 23\n    }\n  }, order.shippingInfo && order.shippingInfo.phoneNo)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 23\n    }\n  }, \"Address:\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 23\n    }\n  }, order.shippingInfo && \"\".concat(order.shippingInfo.address, \", \").concat(order.shippingInfo.city, \", \").concat(order.shippingInfo.state, \", \").concat(order.shippingInfo.pinCode, \", \").concat(order.shippingInfo.country)))), /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 19\n    }\n  }, \"Payment\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"orderDetailsContainerBox\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: order.paymentInfo && order.paymentInfo.status === \"succeeded\" ? \"greenColor\" : \"redColor\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 23\n    }\n  }, order.paymentInfo && order.paymentInfo.status === \"succeeded\" ? \"PAID\" : \"NOT PAID\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 23\n    }\n  }, \"Amount:\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 23\n    }\n  }, order.totalPrice && order.totalPrice))), /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 19\n    }\n  }, \"Order Status\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"orderDetailsContainerBox\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: order.orderStatus && order.orderStatus === \"Delivered\" ? \"greenColor\" : \"redColor\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 23\n    }\n  }, order.orderStatus && order.orderStatus)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"confirmCartItems\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 19\n    }\n  }, \"Your Cart Items:\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"confirmCartItemsContainer\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 19\n    }\n  }, order.orderItems && order.orderItems.map(function (item) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: item.product,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: item.image,\n      alt: \"Product\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(Link, {\n      to: \"/product/\".concat(item.product),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 27\n      }\n    }, item.name), \" \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 27\n      }\n    }, item.quantity, \" X \\u20B9\", item.price, \" =\", \" \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 29\n      }\n    }, \"\\u20B9\", item.price * item.quantity)));\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: order.orderStatus === \"Delivered\" ? \"none\" : \"block\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"updateOrderForm\",\n    onSubmit: updateOrderSubmitHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 19\n    }\n  }, \"Process Order\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(AccountTreeIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: function onChange(e) {\n      return setStatus(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 23\n    }\n  }, \"Choose Category\"), order.orderStatus === \"Processing\" && /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Shipped\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 25\n    }\n  }, \"Shipped\"), order.orderStatus === \"Shipped\" && /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Delivered\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 25\n    }\n  }, \"Delivered\"))), /*#__PURE__*/React.createElement(Button, {\n    id: \"createProductBtn\",\n    type: \"submit\",\n    disabled: loading ? true : false || status === \"\" ? true : false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 19\n    }\n  }, \"Process\")))))));\n};\n\nexport default ProcessOrder;","map":{"version":3,"sources":["C:/Users/hp/OneDrive/Desktop/SE PROJECT/frontend/src/component/Admin/ProcessOrder.js"],"names":["React","Fragment","useEffect","useState","MetaData","Link","Typography","SideBar","getOrderDetails","clearErrors","updateOrder","useSelector","useDispatch","Loader","useAlert","AccountTreeIcon","Button","UPDATE_ORDER_RESET","ProcessOrder","history","match","state","orderDetails","order","error","loading","updateError","isUpdated","updateOrderSubmitHandler","e","preventDefault","myForm","FormData","set","status","dispatch","params","id","alert","setStatus","success","type","display","orderStatus","user","name","shippingInfo","phoneNo","address","city","pinCode","country","paymentInfo","totalPrice","orderItems","map","item","product","image","quantity","price","target","value"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\nimport MetaData from \"../layout/MetaData\";\nimport { Link } from \"react-router-dom\";\nimport { Typography } from \"@material-ui/core\";\nimport SideBar from \"./Sidebar\";\nimport {\n  getOrderDetails,\n  clearErrors,\n  updateOrder,\n} from \"../../actions/orderAction\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Loader from \"../layout/Loader/Loader\";\nimport { useAlert } from \"react-alert\";\nimport AccountTreeIcon from \"@material-ui/icons/AccountTree\";\nimport { Button } from \"@material-ui/core\";\nimport { UPDATE_ORDER_RESET } from \"../../constants/orderConstants\";\nimport \"./processOrder.css\";\n\nconst ProcessOrder = ({ history, match }) => {\n  const { order, error, loading } = useSelector((state) => state.orderDetails);\n  const { error: updateError, isUpdated } = useSelector((state) => state.order);\n\n  const updateOrderSubmitHandler = (e) => {\n    e.preventDefault();\n\n    const myForm = new FormData();\n\n    myForm.set(\"status\", status);\n\n    dispatch(updateOrder(match.params.id, myForm));\n  };\n\n  const dispatch = useDispatch();\n  const alert = useAlert();\n\n  const [status, setStatus] = useState(\"\");\n\n  useEffect(() => {\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n    if (updateError) {\n      alert.error(updateError);\n      dispatch(clearErrors());\n    }\n    if (isUpdated) {\n      alert.success(\"Order Updated Successfully\");\n      dispatch({ type: UPDATE_ORDER_RESET });\n    }\n\n    dispatch(getOrderDetails(match.params.id));\n  }, [dispatch, alert, error, match.params.id, isUpdated, updateError]);\n\n  return (\n    <Fragment>\n      <MetaData title=\"Process Order\" />\n      <div className=\"dashboard\">\n        <SideBar />\n        <div className=\"newProductContainer\">\n          {loading ? (\n            <Loader />\n          ) : (\n            <div\n              className=\"confirmOrderPage\"\n              style={{\n                display: order.orderStatus === \"Delivered\" ? \"block\" : \"grid\",\n              }}\n            >\n              <div>\n                <div className=\"confirmshippingArea\">\n                  <Typography>Shipping Info</Typography>\n                  <div className=\"orderDetailsContainerBox\">\n                    <div>\n                      <p>Name:</p>\n                      <span>{order.user && order.user.name}</span>\n                    </div>\n                    <div>\n                      <p>Phone:</p>\n                      <span>\n                        {order.shippingInfo && order.shippingInfo.phoneNo}\n                      </span>\n                    </div>\n                    <div>\n                      <p>Address:</p>\n                      <span>\n                        {order.shippingInfo &&\n                          `${order.shippingInfo.address}, ${order.shippingInfo.city}, ${order.shippingInfo.state}, ${order.shippingInfo.pinCode}, ${order.shippingInfo.country}`}\n                      </span>\n                    </div>\n                  </div>\n\n                  <Typography>Payment</Typography>\n                  <div className=\"orderDetailsContainerBox\">\n                    <div>\n                      <p\n                        className={\n                          order.paymentInfo &&\n                          order.paymentInfo.status === \"succeeded\"\n                            ? \"greenColor\"\n                            : \"redColor\"\n                        }\n                      >\n                        {order.paymentInfo &&\n                        order.paymentInfo.status === \"succeeded\"\n                          ? \"PAID\"\n                          : \"NOT PAID\"}\n                      </p>\n                    </div>\n\n                    <div>\n                      <p>Amount:</p>\n                      <span>{order.totalPrice && order.totalPrice}</span>\n                    </div>\n                  </div>\n\n                  <Typography>Order Status</Typography>\n                  <div className=\"orderDetailsContainerBox\">\n                    <div>\n                      <p\n                        className={\n                          order.orderStatus && order.orderStatus === \"Delivered\"\n                            ? \"greenColor\"\n                            : \"redColor\"\n                        }\n                      >\n                        {order.orderStatus && order.orderStatus}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"confirmCartItems\">\n                  <Typography>Your Cart Items:</Typography>\n                  <div className=\"confirmCartItemsContainer\">\n                    {order.orderItems &&\n                      order.orderItems.map((item) => (\n                        <div key={item.product}>\n                          <img src={item.image} alt=\"Product\" />\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>{\" \"}\n                          <span>\n                            {item.quantity} X ₹{item.price} ={\" \"}\n                            <b>₹{item.price * item.quantity}</b>\n                          </span>\n                        </div>\n                      ))}\n                  </div>\n                </div>\n              </div>\n              {/*  */}\n              <div\n                style={{\n                  display: order.orderStatus === \"Delivered\" ? \"none\" : \"block\",\n                }}\n              >\n                <form\n                  className=\"updateOrderForm\"\n                  onSubmit={updateOrderSubmitHandler}\n                >\n                  <h1>Process Order</h1>\n\n                  <div>\n                    <AccountTreeIcon />\n                    <select onChange={(e) => setStatus(e.target.value)}>\n                      <option value=\"\">Choose Category</option>\n                      {order.orderStatus === \"Processing\" && (\n                        <option value=\"Shipped\">Shipped</option>\n                      )}\n\n                      {order.orderStatus === \"Shipped\" && (\n                        <option value=\"Delivered\">Delivered</option>\n                      )}\n                    </select>\n                  </div>\n\n                  <Button\n                    id=\"createProductBtn\"\n                    type=\"submit\"\n                    disabled={\n                      loading ? true : false || status === \"\" ? true : false\n                    }\n                  >\n                    Process\n                  </Button>\n                </form>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default ProcessOrder;\n"]},"metadata":{},"sourceType":"module"}