{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\hp\\\\OneDrive\\\\Desktop\\\\SE PROJECT\\\\frontend\\\\src\\\\component\\\\Admin\\\\UsersList.js\";\n\nimport React, { Fragment, useEffect } from \"react\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport \"./productList.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { useAlert } from \"react-alert\";\nimport { Button } from \"@material-ui/core\";\nimport MetaData from \"../layout/MetaData\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport SideBar from \"./Sidebar\";\nimport { getAllUsers, clearErrors, deleteUser } from \"../../actions/userAction\";\nimport { DELETE_USER_RESET } from \"../../constants/userConstants\";\n\nvar UsersList = function UsersList(_ref) {\n  var history = _ref.history;\n  var dispatch = useDispatch();\n  var alert = useAlert();\n\n  var _useSelector = useSelector(function (state) {\n    return state.allUsers;\n  }),\n      error = _useSelector.error,\n      users = _useSelector.users;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.profile;\n  }),\n      deleteError = _useSelector2.error,\n      isDeleted = _useSelector2.isDeleted,\n      message = _useSelector2.message;\n\n  var deleteUserHandler = function deleteUserHandler(id) {\n    dispatch(deleteUser(id));\n  };\n\n  useEffect(function () {\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (deleteError) {\n      alert.error(deleteError);\n      dispatch(clearErrors());\n    }\n\n    if (isDeleted) {\n      alert.success(message);\n      history.push(\"/admin/users\");\n      dispatch({\n        type: DELETE_USER_RESET\n      });\n    }\n\n    dispatch(getAllUsers());\n  }, [dispatch, alert, error, deleteError, history, isDeleted, message]);\n  var columns = [{\n    field: \"id\",\n    headerName: \"User ID\",\n    minWidth: 180,\n    flex: 0.8\n  }, {\n    field: \"email\",\n    headerName: \"Email\",\n    minWidth: 200,\n    flex: 1\n  }, {\n    field: \"name\",\n    headerName: \"Name\",\n    minWidth: 150,\n    flex: 0.5\n  }, {\n    field: \"role\",\n    headerName: \"Role\",\n    type: \"number\",\n    minWidth: 150,\n    flex: 0.3,\n    cellClassName: function cellClassName(params) {\n      return params.getValue(params.id, \"role\") === \"admin\" ? \"greenColor\" : \"redColor\";\n    }\n  }, {\n    field: \"actions\",\n    flex: 0.3,\n    headerName: \"Actions\",\n    minWidth: 150,\n    type: \"number\",\n    sortable: false,\n    renderCell: function renderCell(params) {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/admin/user/\".concat(params.getValue(params.id, \"id\")),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(EditIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(Button, {\n        onClick: function onClick() {\n          return deleteUserHandler(params.getValue(params.id, \"id\"));\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(DeleteIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }\n      })));\n    }\n  }];\n  var rows = [];\n  users && users.forEach(function (item) {\n    rows.push({\n      id: item._id,\n      role: item.role,\n      email: item.email,\n      name: item.name\n    });\n  });\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MetaData, {\n    title: \"ALL USERS - Admin\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SideBar, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"productListContainer\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    id: \"productListHeading\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, \"ALL USERS\"), /*#__PURE__*/React.createElement(DataGrid, {\n    rows: rows,\n    columns: columns,\n    pageSize: 10,\n    disableSelectionOnClick: true,\n    className: \"productListTable\",\n    autoHeight: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default UsersList;","map":{"version":3,"sources":["C:/Users/hp/OneDrive/Desktop/SE PROJECT/frontend/src/component/Admin/UsersList.js"],"names":["React","Fragment","useEffect","DataGrid","useSelector","useDispatch","Link","useAlert","Button","MetaData","EditIcon","DeleteIcon","SideBar","getAllUsers","clearErrors","deleteUser","DELETE_USER_RESET","UsersList","history","dispatch","alert","state","allUsers","error","users","profile","deleteError","isDeleted","message","deleteUserHandler","id","success","push","type","columns","field","headerName","minWidth","flex","cellClassName","params","getValue","sortable","renderCell","rows","forEach","item","_id","role","email","name"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport \"./productList.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { useAlert } from \"react-alert\";\nimport { Button } from \"@material-ui/core\";\nimport MetaData from \"../layout/MetaData\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport SideBar from \"./Sidebar\";\nimport { getAllUsers, clearErrors, deleteUser } from \"../../actions/userAction\";\nimport { DELETE_USER_RESET } from \"../../constants/userConstants\";\n\nconst UsersList = ({ history }) => {\n  const dispatch = useDispatch();\n\n  const alert = useAlert();\n\n  const { error, users } = useSelector((state) => state.allUsers);\n\n  const {\n    error: deleteError,\n    isDeleted,\n    message,\n  } = useSelector((state) => state.profile);\n\n  const deleteUserHandler = (id) => {\n    dispatch(deleteUser(id));\n  };\n\n  useEffect(() => {\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (deleteError) {\n      alert.error(deleteError);\n      dispatch(clearErrors());\n    }\n\n    if (isDeleted) {\n      alert.success(message);\n      history.push(\"/admin/users\");\n      dispatch({ type: DELETE_USER_RESET });\n    }\n\n    dispatch(getAllUsers());\n  }, [dispatch, alert, error, deleteError, history, isDeleted, message]);\n\n  const columns = [\n    { field: \"id\", headerName: \"User ID\", minWidth: 180, flex: 0.8 },\n\n    {\n      field: \"email\",\n      headerName: \"Email\",\n      minWidth: 200,\n      flex: 1,\n    },\n    {\n      field: \"name\",\n      headerName: \"Name\",\n      minWidth: 150,\n      flex: 0.5,\n    },\n\n    {\n      field: \"role\",\n      headerName: \"Role\",\n      type: \"number\",\n      minWidth: 150,\n      flex: 0.3,\n      cellClassName: (params) => {\n        return params.getValue(params.id, \"role\") === \"admin\"\n          ? \"greenColor\"\n          : \"redColor\";\n      },\n    },\n\n    {\n      field: \"actions\",\n      flex: 0.3,\n      headerName: \"Actions\",\n      minWidth: 150,\n      type: \"number\",\n      sortable: false,\n      renderCell: (params) => {\n        return (\n          <Fragment>\n            <Link to={`/admin/user/${params.getValue(params.id, \"id\")}`}>\n              <EditIcon />\n            </Link>\n\n            <Button\n              onClick={() =>\n                deleteUserHandler(params.getValue(params.id, \"id\"))\n              }\n            >\n              <DeleteIcon />\n            </Button>\n          </Fragment>\n        );\n      },\n    },\n  ];\n\n  const rows = [];\n\n  users &&\n    users.forEach((item) => {\n      rows.push({\n        id: item._id,\n        role: item.role,\n        email: item.email,\n        name: item.name,\n      });\n    });\n\n  return (\n    <Fragment>\n      <MetaData title={`ALL USERS - Admin`} />\n\n      <div className=\"dashboard\">\n        <SideBar />\n        <div className=\"productListContainer\">\n          <h1 id=\"productListHeading\">ALL USERS</h1>\n\n          <DataGrid\n            rows={rows}\n            columns={columns}\n            pageSize={10}\n            disableSelectionOnClick\n            className=\"productListTable\"\n            autoHeight\n          />\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default UsersList;\n"]},"metadata":{},"sourceType":"module"}