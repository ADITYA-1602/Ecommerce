{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Carousel = void 0;\n\nvar CarouselItem_1 = require(\"./CarouselItem\");\n\nvar Indicators_1 = require(\"./Indicators\");\n\nvar util_1 = require(\"./util\");\n\nvar Styled_1 = require(\"./Styled\");\n\nvar react_1 = __importStar(require(\"react\"));\n\nvar Carousel = function Carousel(props) {\n  var _a = (0, react_1.useState)({\n    active: 0,\n    prevActive: 0,\n    next: true\n  }),\n      state = _a[0],\n      setState = _a[1];\n  /** Used to set carousel's height. It is being set by the CarouselItems */\n\n\n  var _b = (0, react_1.useState)(),\n      childrenHeight = _b[0],\n      setChildrenHeight = _b[1];\n\n  var _c = (0, react_1.useState)(false),\n      paused = _c[0],\n      setPaused = _c[1];\n\n  var sanitizedProps = (0, util_1.sanitizeProps)(props); // componentDidMount & onIndexChange\n\n  (0, react_1.useEffect)(function () {\n    var index = sanitizedProps.index,\n        changeOnFirstRender = sanitizedProps.changeOnFirstRender;\n    setNext(index, true, changeOnFirstRender);\n  }, [sanitizedProps.index]);\n  (0, util_1.useInterval)(function () {\n    var autoPlay = sanitizedProps.autoPlay;\n\n    if (autoPlay && !paused) {\n      next(undefined);\n    }\n  }, sanitizedProps.interval);\n\n  var next = function next(event) {\n    var children = sanitizedProps.children,\n        cycleNavigation = sanitizedProps.cycleNavigation;\n    var last = Array.isArray(children) ? children.length - 1 : 0;\n    var nextActive = state.active + 1 > last ? cycleNavigation ? 0 : state.active : state.active + 1;\n    setNext(nextActive, true);\n    if (event) event.stopPropagation();\n  };\n\n  var prev = function prev(event) {\n    var children = sanitizedProps.children,\n        cycleNavigation = sanitizedProps.cycleNavigation;\n    var last = Array.isArray(children) ? children.length - 1 : 0;\n    var nextActive = state.active - 1 < 0 ? cycleNavigation ? last : state.active : state.active - 1;\n    setNext(nextActive, false);\n    if (event) event.stopPropagation();\n  };\n\n  var setNext = function setNext(index, isNext, runCallbacks) {\n    if (runCallbacks === void 0) {\n      runCallbacks = true;\n    }\n\n    var onChange = sanitizedProps.onChange,\n        children = sanitizedProps.children,\n        strictIndexing = sanitizedProps.strictIndexing;\n\n    if (Array.isArray(children)) {\n      if (strictIndexing && index > children.length - 1) index = children.length - 1;\n      if (strictIndexing && index < 0) index = 0;\n    } else {\n      index = 0;\n    }\n\n    if (runCallbacks) {\n      if (isNext !== undefined) isNext ? sanitizedProps.next(index, state.active) : sanitizedProps.prev(index, state.active);\n      onChange(index, state.active);\n    }\n\n    if (isNext === undefined) {\n      isNext = index > state.active;\n    }\n\n    setState({\n      active: index,\n      prevActive: state.active,\n      next: isNext\n    });\n  };\n\n  var children = sanitizedProps.children,\n      sx = sanitizedProps.sx,\n      className = sanitizedProps.className,\n      height = sanitizedProps.height,\n      stopAutoPlayOnHover = sanitizedProps.stopAutoPlayOnHover,\n      animation = sanitizedProps.animation,\n      duration = sanitizedProps.duration,\n      swipe = sanitizedProps.swipe,\n      navButtonsAlwaysInvisible = sanitizedProps.navButtonsAlwaysInvisible,\n      navButtonsAlwaysVisible = sanitizedProps.navButtonsAlwaysVisible,\n      cycleNavigation = sanitizedProps.cycleNavigation,\n      fullHeightHover = sanitizedProps.fullHeightHover,\n      navButtonsProps = sanitizedProps.navButtonsProps,\n      navButtonsWrapperProps = sanitizedProps.navButtonsWrapperProps,\n      NavButton = sanitizedProps.NavButton,\n      NextIcon = sanitizedProps.NextIcon,\n      PrevIcon = sanitizedProps.PrevIcon,\n      indicators = sanitizedProps.indicators,\n      indicatorContainerProps = sanitizedProps.indicatorContainerProps,\n      indicatorIconButtonProps = sanitizedProps.indicatorIconButtonProps,\n      activeIndicatorIconButtonProps = sanitizedProps.activeIndicatorIconButtonProps,\n      IndicatorIcon = sanitizedProps.IndicatorIcon;\n\n  var showButton = function showButton(next) {\n    if (next === void 0) {\n      next = true;\n    }\n\n    if (cycleNavigation) return true;\n    var last = Array.isArray(children) ? children.length - 1 : 0;\n    if (next && state.active === last) return false;\n    if (!next && state.active === 0) return false;\n    return true;\n  };\n\n  return react_1.default.createElement(Styled_1.StyledRoot, {\n    sx: sx,\n    className: className,\n    onMouseOver: function onMouseOver() {\n      stopAutoPlayOnHover && setPaused(true);\n    },\n    onMouseOut: function onMouseOut() {\n      stopAutoPlayOnHover && setPaused(false);\n    },\n    onFocus: function onFocus() {\n      stopAutoPlayOnHover && setPaused(true);\n    },\n    onBlur: function onBlur() {\n      stopAutoPlayOnHover && setPaused(false);\n    }\n  }, react_1.default.createElement(Styled_1.StyledItemWrapper, {\n    style: {\n      height: height ? height : childrenHeight\n    }\n  }, Array.isArray(children) ? children.map(function (child, index) {\n    return react_1.default.createElement(CarouselItem_1.CarouselItem, {\n      key: \"carousel-item\" + index,\n      state: state,\n      index: index,\n      maxIndex: children.length - 1,\n      child: child,\n      animation: animation,\n      duration: duration,\n      swipe: swipe,\n      next: next,\n      prev: prev,\n      height: height,\n      setHeight: setChildrenHeight\n    });\n  }) : react_1.default.createElement(CarouselItem_1.CarouselItem, {\n    key: \"carousel-item0\",\n    state: state,\n    index: 0,\n    maxIndex: 0,\n    child: children,\n    animation: animation,\n    duration: duration,\n    height: height,\n    setHeight: setChildrenHeight\n  })), !navButtonsAlwaysInvisible && showButton(true) && react_1.default.createElement(Styled_1.StyledButtonWrapper, __assign({\n    \"$next\": true,\n    \"$prev\": false,\n    \"$fullHeightHover\": fullHeightHover\n  }, navButtonsWrapperProps), NavButton !== undefined ? NavButton(__assign({\n    onClick: next,\n    next: true,\n    prev: false\n  }, navButtonsProps)) : react_1.default.createElement(Styled_1.StyledIconButton, __assign({\n    \"$alwaysVisible\": navButtonsAlwaysVisible,\n    \"$fullHeightHover\": fullHeightHover,\n    onClick: next,\n    \"aria-label\": \"Next\"\n  }, navButtonsProps), NextIcon)), !navButtonsAlwaysInvisible && showButton(false) && react_1.default.createElement(Styled_1.StyledButtonWrapper, __assign({\n    \"$next\": false,\n    \"$prev\": true,\n    \"$fullHeightHover\": fullHeightHover\n  }, navButtonsWrapperProps), NavButton !== undefined ? NavButton(__assign({\n    onClick: prev,\n    next: false,\n    prev: true\n  }, navButtonsProps)) : react_1.default.createElement(Styled_1.StyledIconButton, __assign({\n    \"$alwaysVisible\": navButtonsAlwaysVisible,\n    \"$fullHeightHover\": fullHeightHover,\n    onClick: prev,\n    \"aria-label\": \"Previous\"\n  }, navButtonsProps), PrevIcon)), indicators ? react_1.default.createElement(Indicators_1.Indicators, {\n    length: Array.isArray(children) ? children.length : 0,\n    active: state.active,\n    press: setNext,\n    indicatorContainerProps: indicatorContainerProps,\n    indicatorIconButtonProps: indicatorIconButtonProps,\n    activeIndicatorIconButtonProps: activeIndicatorIconButtonProps,\n    IndicatorIcon: IndicatorIcon\n  }) : null);\n};\n\nexports.Carousel = Carousel;\nexports.default = exports.Carousel;","map":null,"metadata":{},"sourceType":"script"}