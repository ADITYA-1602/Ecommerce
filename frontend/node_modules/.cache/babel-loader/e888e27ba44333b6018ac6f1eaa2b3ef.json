{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\hp\\\\OneDrive\\\\Desktop\\\\SE PROJECT\\\\frontend\\\\src\\\\component\\\\Admin\\\\OrderList.js\";\n\nimport React, { Fragment, useEffect } from \"react\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport \"./productList.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { useAlert } from \"react-alert\";\nimport { Button } from \"@material-ui/core\";\nimport MetaData from \"../layout/MetaData\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport SideBar from \"./Sidebar\";\nimport { deleteOrder, getAllOrders, clearErrors } from \"../../actions/orderAction\";\nimport { DELETE_ORDER_RESET } from \"../../constants/orderConstants\";\n\nvar OrderList = function OrderList(_ref) {\n  var history = _ref.history;\n  var dispatch = useDispatch();\n  var alert = useAlert();\n\n  var _useSelector = useSelector(function (state) {\n    return state.allOrders;\n  }),\n      error = _useSelector.error,\n      orders = _useSelector.orders;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.order;\n  }),\n      deleteError = _useSelector2.error,\n      isDeleted = _useSelector2.isDeleted;\n\n  var deleteOrderHandler = function deleteOrderHandler(id) {\n    dispatch(deleteOrder(id));\n  };\n\n  useEffect(function () {\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (deleteError) {\n      alert.error(deleteError);\n      dispatch(clearErrors());\n    }\n\n    if (isDeleted) {\n      alert.success(\"Order Deleted Successfully\");\n      history.push(\"/admin/orders\");\n      dispatch({\n        type: DELETE_ORDER_RESET\n      });\n    }\n\n    dispatch(getAllOrders());\n  }, [dispatch, alert, error, deleteError, history, isDeleted]);\n  var columns = [{\n    field: \"id\",\n    headerName: \"Order ID\",\n    minWidth: 300,\n    flex: 1\n  }, {\n    field: \"status\",\n    headerName: \"Status\",\n    minWidth: 150,\n    flex: 0.5,\n    cellClassName: function cellClassName(params) {\n      return params.getValue(params.id, \"status\") === \"Delivered\" ? \"greenColor\" : \"redColor\";\n    }\n  }, {\n    field: \"itemsQty\",\n    headerName: \"Items Qty\",\n    type: \"number\",\n    minWidth: 150,\n    flex: 0.4\n  }, {\n    field: \"amount\",\n    headerName: \"Amount\",\n    type: \"number\",\n    minWidth: 270,\n    flex: 0.5\n  }, {\n    field: \"actions\",\n    flex: 0.3,\n    headerName: \"Actions\",\n    minWidth: 150,\n    type: \"number\",\n    sortable: false,\n    renderCell: function renderCell(params) {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/admin/order/\".concat(params.getValue(params.id, \"id\")),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(EditIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(Button, {\n        onClick: function onClick() {\n          return deleteOrderHandler(params.getValue(params.id, \"id\"));\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(DeleteIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }\n      })));\n    }\n  }];\n  var rows = [];\n  orders && orders.forEach(function (item) {\n    rows.push({\n      id: item._id,\n      itemsQty: item.orderItems.length,\n      amount: item.totalPrice,\n      status: item.orderStatus\n    });\n  });\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MetaData, {\n    title: \"ALL ORDERS - Admin\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SideBar, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"productListContainer\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    id: \"productListHeading\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }, \"ALL ORDERS\"), /*#__PURE__*/React.createElement(DataGrid, {\n    rows: rows,\n    columns: columns,\n    pageSize: 10,\n    disableSelectionOnClick: true,\n    className: \"productListTable\",\n    autoHeight: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default OrderList;","map":{"version":3,"sources":["C:/Users/hp/OneDrive/Desktop/SE PROJECT/frontend/src/component/Admin/OrderList.js"],"names":["React","Fragment","useEffect","DataGrid","useSelector","useDispatch","Link","useAlert","Button","MetaData","EditIcon","DeleteIcon","SideBar","deleteOrder","getAllOrders","clearErrors","DELETE_ORDER_RESET","OrderList","history","dispatch","alert","state","allOrders","error","orders","order","deleteError","isDeleted","deleteOrderHandler","id","success","push","type","columns","field","headerName","minWidth","flex","cellClassName","params","getValue","sortable","renderCell","rows","forEach","item","_id","itemsQty","orderItems","length","amount","totalPrice","status","orderStatus"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport \"./productList.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { useAlert } from \"react-alert\";\nimport { Button } from \"@material-ui/core\";\nimport MetaData from \"../layout/MetaData\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport SideBar from \"./Sidebar\";\nimport {\n  deleteOrder,\n  getAllOrders,\n  clearErrors,\n} from \"../../actions/orderAction\";\nimport { DELETE_ORDER_RESET } from \"../../constants/orderConstants\";\n\nconst OrderList = ({ history }) => {\n  const dispatch = useDispatch();\n\n  const alert = useAlert();\n\n  const { error, orders } = useSelector((state) => state.allOrders);\n\n  const { error: deleteError, isDeleted } = useSelector((state) => state.order);\n\n  const deleteOrderHandler = (id) => {\n    dispatch(deleteOrder(id));\n  };\n\n  useEffect(() => {\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (deleteError) {\n      alert.error(deleteError);\n      dispatch(clearErrors());\n    }\n\n    if (isDeleted) {\n      alert.success(\"Order Deleted Successfully\");\n      history.push(\"/admin/orders\");\n      dispatch({ type: DELETE_ORDER_RESET });\n    }\n\n    dispatch(getAllOrders());\n  }, [dispatch, alert, error, deleteError, history, isDeleted]);\n\n  const columns = [\n    { field: \"id\", headerName: \"Order ID\", minWidth: 300, flex: 1 },\n\n    {\n      field: \"status\",\n      headerName: \"Status\",\n      minWidth: 150,\n      flex: 0.5,\n      cellClassName: (params) => {\n        return params.getValue(params.id, \"status\") === \"Delivered\"\n          ? \"greenColor\"\n          : \"redColor\";\n      },\n    },\n    {\n      field: \"itemsQty\",\n      headerName: \"Items Qty\",\n      type: \"number\",\n      minWidth: 150,\n      flex: 0.4,\n    },\n\n    {\n      field: \"amount\",\n      headerName: \"Amount\",\n      type: \"number\",\n      minWidth: 270,\n      flex: 0.5,\n    },\n\n    {\n      field: \"actions\",\n      flex: 0.3,\n      headerName: \"Actions\",\n      minWidth: 150,\n      type: \"number\",\n      sortable: false,\n      renderCell: (params) => {\n        return (\n          <Fragment>\n            <Link to={`/admin/order/${params.getValue(params.id, \"id\")}`}>\n              <EditIcon />\n            </Link>\n\n            <Button\n              onClick={() =>\n                deleteOrderHandler(params.getValue(params.id, \"id\"))\n              }\n            >\n              <DeleteIcon />\n            </Button>\n          </Fragment>\n        );\n      },\n    },\n  ];\n\n  const rows = [];\n\n  orders &&\n    orders.forEach((item) => {\n      rows.push({\n        id: item._id,\n        itemsQty: item.orderItems.length,\n        amount: item.totalPrice,\n        status: item.orderStatus,\n      });\n    });\n\n  return (\n    <Fragment>\n      <MetaData title={`ALL ORDERS - Admin`} />\n\n      <div className=\"dashboard\">\n        <SideBar />\n        <div className=\"productListContainer\">\n          <h1 id=\"productListHeading\">ALL ORDERS</h1>\n\n          <DataGrid\n            rows={rows}\n            columns={columns}\n            pageSize={10}\n            disableSelectionOnClick\n            className=\"productListTable\"\n            autoHeight\n          />\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default OrderList;\n"]},"metadata":{},"sourceType":"module"}