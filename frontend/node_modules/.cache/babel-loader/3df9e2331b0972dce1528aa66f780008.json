{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\hp\\\\OneDrive\\\\Desktop\\\\SE PROJECT\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\hp\\\\OneDrive\\\\Desktop\\\\SE PROJECT\\\\frontend\\\\src\\\\component\\\\Admin\\\\UpdateUser.js\";\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useAlert } from \"react-alert\";\nimport { Button } from \"@material-ui/core\";\nimport MetaData from \"../layout/MetaData\";\nimport MailOutlineIcon from \"@material-ui/icons/MailOutline\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport VerifiedUserIcon from \"@material-ui/icons/VerifiedUser\";\nimport SideBar from \"./Sidebar\";\nimport { UPDATE_USER_RESET } from \"../../constants/userConstants\";\nimport { getUserDetails, updateUser, clearErrors } from \"../../actions/userAction\";\nimport Loader from \"../layout/Loader/Loader\";\n\nvar UpdateUser = function UpdateUser(_ref) {\n  var history = _ref.history,\n      match = _ref.match;\n  var dispatch = useDispatch();\n  var alert = useAlert();\n\n  var _useSelector = useSelector(function (state) {\n    return state.userDetails;\n  }),\n      loading = _useSelector.loading,\n      error = _useSelector.error,\n      user = _useSelector.user;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.profile;\n  }),\n      updateLoading = _useSelector2.loading,\n      updateError = _useSelector2.error,\n      isUpdated = _useSelector2.isUpdated;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      role = _useState6[0],\n      setRole = _useState6[1];\n\n  var userId = match.params.id;\n  useEffect(function () {\n    if (user && user._id !== userId) {\n      dispatch(getUserDetails(userId));\n    } else {\n      setName(user.name);\n      setEmail(user.email);\n      setRole(user.role);\n    }\n\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (updateError) {\n      alert.error(updateError);\n      dispatch(clearErrors());\n    }\n\n    if (isUpdated) {\n      alert.success(\"User Updated Successfully\");\n      history.push(\"/admin/users\");\n      dispatch({\n        type: UPDATE_USER_RESET\n      });\n    }\n  }, [dispatch, alert, error, history, isUpdated, updateError, user, userId]);\n\n  var updateUserSubmitHandler = function updateUserSubmitHandler(e) {\n    e.preventDefault();\n    var myForm = new FormData();\n    myForm.set(\"name\", name);\n    myForm.set(\"email\", email);\n    myForm.set(\"role\", role);\n    dispatch(updateUser(userId, myForm));\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MetaData, {\n    title: \"Update User\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SideBar, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newProductContainer\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, loading ? /*#__PURE__*/React.createElement(Loader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(\"form\", {\n    className: \"createProductForm\",\n    onSubmit: updateUserSubmitHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }, \"Update User\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(PersonIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Name\",\n    required: true,\n    value: name,\n    onChange: function onChange(e) {\n      return setName(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(MailOutlineIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    placeholder: \"Email\",\n    required: true,\n    value: email,\n    onChange: function onChange(e) {\n      return setEmail(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(VerifiedUserIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"select\", {\n    value: role,\n    onChange: function onChange(e) {\n      return setRole(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 19\n    }\n  }, \"Choose Role\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"admin\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 19\n    }\n  }, \"Admin\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"user\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 19\n    }\n  }, \"User\"))), /*#__PURE__*/React.createElement(Button, {\n    id: \"createProductBtn\",\n    type: \"submit\",\n    disabled: updateLoading ? true : false || role === \"\" ? true : false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  }, \"Update\")))));\n};\n\nexport default UpdateUser;","map":{"version":3,"sources":["C:/Users/hp/OneDrive/Desktop/SE PROJECT/frontend/src/component/Admin/UpdateUser.js"],"names":["React","Fragment","useEffect","useState","useSelector","useDispatch","useAlert","Button","MetaData","MailOutlineIcon","PersonIcon","VerifiedUserIcon","SideBar","UPDATE_USER_RESET","getUserDetails","updateUser","clearErrors","Loader","UpdateUser","history","match","dispatch","alert","state","userDetails","loading","error","user","profile","updateLoading","updateError","isUpdated","name","setName","email","setEmail","role","setRole","userId","params","id","_id","success","push","type","updateUserSubmitHandler","e","preventDefault","myForm","FormData","set","target","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,SACEC,cADF,EAEEC,UAFF,EAGEC,WAHF,QAIO,0BAJP;AAKA,OAAOC,MAAP,MAAmB,yBAAnB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAwB;AAAA,MAArBC,OAAqB,QAArBA,OAAqB;AAAA,MAAZC,KAAY,QAAZA,KAAY;AACzC,MAAMC,QAAQ,GAAGhB,WAAW,EAA5B;AACA,MAAMiB,KAAK,GAAGhB,QAAQ,EAAtB;;AAFyC,qBAIRF,WAAW,CAAC,UAACmB,KAAD;AAAA,WAAWA,KAAK,CAACC,WAAjB;AAAA,GAAD,CAJH;AAAA,MAIjCC,OAJiC,gBAIjCA,OAJiC;AAAA,MAIxBC,KAJwB,gBAIxBA,KAJwB;AAAA,MAIjBC,IAJiB,gBAIjBA,IAJiB;;AAAA,sBAUrCvB,WAAW,CAAC,UAACmB,KAAD;AAAA,WAAWA,KAAK,CAACK,OAAjB;AAAA,GAAD,CAV0B;AAAA,MAO9BC,aAP8B,iBAOvCJ,OAPuC;AAAA,MAQhCK,WARgC,iBAQvCJ,KARuC;AAAA,MASvCK,SATuC,iBASvCA,SATuC;;AAAA,kBAYjB5B,QAAQ,CAAC,EAAD,CAZS;AAAA;AAAA,MAYlC6B,IAZkC;AAAA,MAY5BC,OAZ4B;;AAAA,mBAaf9B,QAAQ,CAAC,EAAD,CAbO;AAAA;AAAA,MAalC+B,KAbkC;AAAA,MAa3BC,QAb2B;;AAAA,mBAcjBhC,QAAQ,CAAC,EAAD,CAdS;AAAA;AAAA,MAclCiC,IAdkC;AAAA,MAc5BC,OAd4B;;AAgBzC,MAAMC,MAAM,GAAGlB,KAAK,CAACmB,MAAN,CAAaC,EAA5B;AAEAtC,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIyB,IAAI,IAAIA,IAAI,CAACc,GAAL,KAAaH,MAAzB,EAAiC;AAC/BjB,MAAAA,QAAQ,CAACP,cAAc,CAACwB,MAAD,CAAf,CAAR;AACD,KAFD,MAEO;AACLL,MAAAA,OAAO,CAACN,IAAI,CAACK,IAAN,CAAP;AACAG,MAAAA,QAAQ,CAACR,IAAI,CAACO,KAAN,CAAR;AACAG,MAAAA,OAAO,CAACV,IAAI,CAACS,IAAN,CAAP;AACD;;AACD,QAAIV,KAAJ,EAAW;AACTJ,MAAAA,KAAK,CAACI,KAAN,CAAYA,KAAZ;AACAL,MAAAA,QAAQ,CAACL,WAAW,EAAZ,CAAR;AACD;;AAED,QAAIc,WAAJ,EAAiB;AACfR,MAAAA,KAAK,CAACI,KAAN,CAAYI,WAAZ;AACAT,MAAAA,QAAQ,CAACL,WAAW,EAAZ,CAAR;AACD;;AAED,QAAIe,SAAJ,EAAe;AACbT,MAAAA,KAAK,CAACoB,OAAN,CAAc,2BAAd;AACAvB,MAAAA,OAAO,CAACwB,IAAR,CAAa,cAAb;AACAtB,MAAAA,QAAQ,CAAC;AAAEuB,QAAAA,IAAI,EAAE/B;AAAR,OAAD,CAAR;AACD;AACF,GAvBQ,EAuBN,CAACQ,QAAD,EAAWC,KAAX,EAAkBI,KAAlB,EAAyBP,OAAzB,EAAkCY,SAAlC,EAA6CD,WAA7C,EAA0DH,IAA1D,EAAgEW,MAAhE,CAvBM,CAAT;;AAyBA,MAAMO,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACC,CAAD,EAAO;AACrCA,IAAAA,CAAC,CAACC,cAAF;AAEA,QAAMC,MAAM,GAAG,IAAIC,QAAJ,EAAf;AAEAD,IAAAA,MAAM,CAACE,GAAP,CAAW,MAAX,EAAmBlB,IAAnB;AACAgB,IAAAA,MAAM,CAACE,GAAP,CAAW,OAAX,EAAoBhB,KAApB;AACAc,IAAAA,MAAM,CAACE,GAAP,CAAW,MAAX,EAAmBd,IAAnB;AAEAf,IAAAA,QAAQ,CAACN,UAAU,CAACuB,MAAD,EAASU,MAAT,CAAX,CAAR;AACD,GAVD;;AAYA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGvB,OAAO,gBACN,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,gBAGN;AACE,IAAA,SAAS,EAAC,mBADZ;AAEE,IAAA,QAAQ,EAAEoB,uBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,MAFd;AAGE,IAAA,QAAQ,MAHV;AAIE,IAAA,KAAK,EAAEb,IAJT;AAKE,IAAA,QAAQ,EAAE,kBAACc,CAAD;AAAA,aAAOb,OAAO,CAACa,CAAC,CAACK,MAAF,CAASC,KAAV,CAAd;AAAA,KALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CANF,eAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,WAAW,EAAC,OAFd;AAGE,IAAA,QAAQ,MAHV;AAIE,IAAA,KAAK,EAAElB,KAJT;AAKE,IAAA,QAAQ,EAAE,kBAACY,CAAD;AAAA,aAAOX,QAAQ,CAACW,CAAC,CAACK,MAAF,CAASC,KAAV,CAAf;AAAA,KALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAhBF,eA2BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAQ,IAAA,KAAK,EAAEhB,IAAf;AAAqB,IAAA,QAAQ,EAAE,kBAACU,CAAD;AAAA,aAAOT,OAAO,CAACS,CAAC,CAACK,MAAF,CAASC,KAAV,CAAd;AAAA,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AAAQ,IAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,eAGE;AAAQ,IAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,CAFF,CA3BF,eAoCE,oBAAC,MAAD;AACE,IAAA,EAAE,EAAC,kBADL;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,QAAQ,EACNvB,aAAa,GAAG,IAAH,GAAU,SAASO,IAAI,KAAK,EAAlB,GAAuB,IAAvB,GAA8B,KAJzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cApCF,CAJJ,CAFF,CAFF,CADF;AA4DD,CAnHD;;AAqHA,eAAelB,UAAf","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useAlert } from \"react-alert\";\nimport { Button } from \"@material-ui/core\";\nimport MetaData from \"../layout/MetaData\";\nimport MailOutlineIcon from \"@material-ui/icons/MailOutline\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport VerifiedUserIcon from \"@material-ui/icons/VerifiedUser\";\nimport SideBar from \"./Sidebar\";\nimport { UPDATE_USER_RESET } from \"../../constants/userConstants\";\nimport {\n  getUserDetails,\n  updateUser,\n  clearErrors,\n} from \"../../actions/userAction\";\nimport Loader from \"../layout/Loader/Loader\";\n\nconst UpdateUser = ({ history, match }) => {\n  const dispatch = useDispatch();\n  const alert = useAlert();\n\n  const { loading, error, user } = useSelector((state) => state.userDetails);\n\n  const {\n    loading: updateLoading,\n    error: updateError,\n    isUpdated,\n  } = useSelector((state) => state.profile);\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [role, setRole] = useState(\"\");\n\n  const userId = match.params.id;\n\n  useEffect(() => {\n    if (user && user._id !== userId) {\n      dispatch(getUserDetails(userId));\n    } else {\n      setName(user.name);\n      setEmail(user.email);\n      setRole(user.role);\n    }\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (updateError) {\n      alert.error(updateError);\n      dispatch(clearErrors());\n    }\n\n    if (isUpdated) {\n      alert.success(\"User Updated Successfully\");\n      history.push(\"/admin/users\");\n      dispatch({ type: UPDATE_USER_RESET });\n    }\n  }, [dispatch, alert, error, history, isUpdated, updateError, user, userId]);\n\n  const updateUserSubmitHandler = (e) => {\n    e.preventDefault();\n\n    const myForm = new FormData();\n\n    myForm.set(\"name\", name);\n    myForm.set(\"email\", email);\n    myForm.set(\"role\", role);\n\n    dispatch(updateUser(userId, myForm));\n  };\n\n  return (\n    <Fragment>\n      <MetaData title=\"Update User\" />\n      <div className=\"dashboard\">\n        <SideBar />\n        <div className=\"newProductContainer\">\n          {loading ? (\n            <Loader />\n          ) : (\n            <form\n              className=\"createProductForm\"\n              onSubmit={updateUserSubmitHandler}\n            >\n              <h1>Update User</h1>\n\n              <div>\n                <PersonIcon />\n                <input\n                  type=\"text\"\n                  placeholder=\"Name\"\n                  required\n                  value={name}\n                  onChange={(e) => setName(e.target.value)}\n                />\n              </div>\n              <div>\n                <MailOutlineIcon />\n                <input\n                  type=\"email\"\n                  placeholder=\"Email\"\n                  required\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                />\n              </div>\n\n              <div>\n                <VerifiedUserIcon />\n                <select value={role} onChange={(e) => setRole(e.target.value)}>\n                  <option value=\"\">Choose Role</option>\n                  <option value=\"admin\">Admin</option>\n                  <option value=\"user\">User</option>\n                </select>\n              </div>\n\n              <Button\n                id=\"createProductBtn\"\n                type=\"submit\"\n                disabled={\n                  updateLoading ? true : false || role === \"\" ? true : false\n                }\n              >\n                Update\n              </Button>\n            </form>\n          )}\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default UpdateUser;\n"]},"metadata":{},"sourceType":"module"}